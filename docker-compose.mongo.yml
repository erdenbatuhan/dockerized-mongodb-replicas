version: "3"
networks:
  isolated-network-mongo: # Isolated network exclusively for MongoDB
volumes:
  volume-mongo1.db:
  volume-mongo2.db:
  volume-mongo3.db:
services:
  # Replica Manager
  mongo-manager:
    container_name: ${MONGO_REPL_MANAGER}
    image: mongo:latest
    working_dir: /app
    entrypoint:
      - ./init-replica-set.sh
    networks:
      isolated-network-mongo: # Isolated network exclusively for MongoDB
    volumes:
      - ${MONGO_DIR}/init-scripts:/app
    env_file:
      - ${MONGO_DIR}/mongo.properties
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy
  # Replica 1
  mongo1:
    container_name: ${MONGO_REPL_1}
    image: mongo:latest
    command: --port ${MONGO_PORT} --bind_ip_all --replSet ${MONGO_REPL_ID}
    restart: unless-stopped
    networks:
      isolated-network-mongo: # Isolated network exclusively for MongoDB
    volumes:
      - volume-mongo1.db:/data/db
#    ports: # Uncomment for testing purposes; under normal conditions, it should only be accessible through the isolated MongoDB network!
#      - 27300:${MONGO_PORT}
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 10
  # Replica 2
  mongo2:
    container_name: ${MONGO_REPL_2}
    image: mongo:latest
    command: --port ${MONGO_PORT} --bind_ip_all --replSet ${MONGO_REPL_ID}
    restart: unless-stopped
    networks:
      isolated-network-mongo: # Isolated network exclusively for MongoDB
    volumes:
      - volume-mongo2.db:/data/db
#    ports: # Uncomment for testing purposes; under normal conditions, it should only be accessible through the isolated MongoDB network!
#      - 27301:${MONGO_PORT}
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 10
  # Replica 3
  mongo3:
    container_name: ${MONGO_REPL_3}
    image: mongo:latest
    command: --port ${MONGO_PORT} --bind_ip_all --replSet ${MONGO_REPL_ID}
    restart: unless-stopped
    networks:
      isolated-network-mongo: # Isolated network exclusively for MongoDB
    volumes:
      - volume-mongo3.db:/data/db
#    ports: # Uncomment for testing purposes; under normal conditions, it should only be accessible through the isolated MongoDB network!
#      - 27302:${MONGO_PORT}
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 10
